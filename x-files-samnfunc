#X FILES THEME by Mark Snow
#SHEET MUSIC FROM https://www.musicnotes.com/sheetmusic/mtd.asp?ppn=MN0097480
#bpm used is 150, as stated below

use_bpm 150
use_synth :piano
#these variables are used so that we can change values quickly.
x=1
b=0.5
y=0.3333333333333
fnotes = [:a4, :c5, :e5]
snotes = [:f5, :a4, :e5, :f5, :a4, :e5, :f5, :a4, :e5]
notes = [:a, :a3, :e5, :d5, :e5, :g, :e5, :a4]
sustains = [3, 1, 1, 1, 1, 1, 4, 1]
sleeps = [1, 1, 1, 1, 1, 1, 1.5, 0.5]
pans = [1, -1, 1, -1, 1, -1, 1, -1]
index1 = 0
index2 = 0
index=0
spooky = "C:/Users/trina_umana/Documents/Audacity/spooky.wav"

define :beginning do
  3.times do
    play fnotes[index1], sustain: x, amp: b
    sleep y
    index1 = index1 + 1
  end
  index1 = 0
  9.times do
    play snotes[index2], sustain: x, amp: b
    sleep y
    index2 = index2 + 1
  end
  index2 = 0
end

define :main do
  3.times do
    play fnotes[index1],sustain: x - 0.8
    sleep y
    index1 = index1 + 1
  end
  index1 = 0
  9.times do
    play snotes[index2],sustain: x - 0.8
    sleep y
    index2 = index2 + 1
  end
  index2 = 0
end

1.times do
  with_fx :echo do
    sample spooky, amp: 10
  end
end

#this means that the code inside will be played three times
3.times do
  with_fx :bitcrusher do
    1.times do
      beginning
    end
    b = b + 1
  end
end

#a live_loop plays continously, this is the main, iconic part of the theme song.
live_loop :main do
  main
end

#these are the extra sounds you hear in the theme song
live_loop :back do
  with_fx :bitcrusher do
    8.times do
      #these are playing the notes array started at the index value I set earlier (0). every tiem you go through the loop, the index value increases by one, up until the 8th loop, then it resets to 0.
      play notes[index], sustain: sustains[index]
      sleep sleeps[index]
      index = index + 1
    end
    index = 0
  end
end

live_loop :random do
  with_fx :flanger do
    #this piece of code is saying to play a random note, which is 0 through 8
    a = rrand_i(0, 8)
    play a, amp: b - 0.3, pan: pans[index]
    sleep sleeps[index]
  end
end
